

- name: install openHAB runtime
  include: install_openhab_component.yml component=runtime

- name: install openHAB addons
  include: install_openhab_component.yml component=addons

#- name: install openHAB designer-{{openhab_designer_platform}}
#  include: install_openhab_component.yml component=designer-{{openhab_designer_platform}}

- name: link bindings into runtime
  file: >
    state=link
    src={{ openhab_install_dir }}/addons/{{openhab_version}}/org.openhab.{{ item }}-{{openhab_version}}.jar
    dest={{ openhab_install_dir }}/runtime/{{openhab_version}}/addons/org.openhab.{{ item }}-{{openhab_version}}.jar
  with_items:
    - binding.astro
    - binding.hue
    - binding.networkhealth
    - binding.rfxcom
    - binding.xbmc
    - binding.yamahareceiver
    - binding.zwave
    - binding.xpl
    - binding.systeminfo
    - action.xbmc
    - action.prowl
    - action.mail
    - persistence.rrd4j
    

- name: install HABmin
  include: install_habmin.yml 

- name: install my.openhab.org
  include: install_myopenhab.yml 
  

- name: See if configurations is a directory (then we nuke it next)
  shell: "[ -d {{ openhab_install_dir }}/runtime/{{openhab_version}}/configurations ] && echo 'Directory' || echo ''"
  register: is_directory

- name: delete example config directory
  file: path={{ openhab_install_dir }}/runtime/{{openhab_version}}/configurations state=absent
  when: (is_directory.stdout)

- name: create config directory
  file: state=directory path={{ ansible_env.HOME }}/configurations

- name: link our config directory
  file: >
    state=link
    force=yes
    src={{ ansible_env.HOME }}/configurations
    dest={{ openhab_install_dir }}/runtime/{{openhab_version}}/configurations

#- name: sync setup into config
#  synchronize: src=../files/configurations dest={{ ansible_env.HOME }}


## NOT WORKING. NEED TO FIND OUT HOW TO HANDLE TEMPLATES RECURSIVE:
- name: sync setup into config
  template: dest=configurations/{{item}}
  with_fileglob:
        - ../templates/configurations/*.cfg
        - ../templates/configurations/*.xml

- name: sync items into config
  template: dest=configurations/items/{{item}}
  with_fileglob:
        - ../templates/configurations/items/*

- name: sync items into config
  template: dest=configurations/persistence/{{item}}
  with_fileglob:
        - ../templates/configurations/persistence/*

- name: sync items into config
  template: dest=configurations/items/{{item}}
  with_fileglob:
        - ../templates/configurations/scripts/*

- name: sync items into config
  template: dest=configurations/items/{{item}}
  with_fileglob:
        - ../templates/configurations/sitemaps/*  

- name: sync items into config
  template: dest=configurations/items/{{item}}
  with_fileglob:
        - ../templates/configurations/transform/*

- name: sync items into config
  template: dest=configurations/items/{{item}}
  with_fileglob:
        - ../templates/configurations/logback.xml

### END NOT WORKING      


- name: sync secret setup into config
  template: src=configurations/openhab.cfg dest={{ ansible_env.HOME }}/configurations/openhab.cfg

- name: copy start.sh
  template: src=start.sh dest={{ openhab_install_dir }}/runtime/{{openhab_version}}/start.sh mode=0752

- name: stop openHAB-jetty
  shell: lsof -i -P | grep "*:8080 (LISTEN)" | awk '{print $2}' | xargs kill && sleep 10
  register: openhab_running
  ignore_errors: True
  
- name: Assures log directory so jetty wont choke on startup
  file: dest={{ openhab_install_dir }}/runtime/{{openhab_version}}/logs state=directory
  when: 

- name: Start Openhab on boot
  lineinfile: dest=/etc/rc.local regexp="openhab" line="cd {{ openhab_install_dir }}/runtime/{{openhab_version}}; nohup ./start.sh &" insertbefore="exit 0"
  sudo: true

#- name: Start Openhab on boot
#  template: src=openhab.conf dest=/etc/init
#  sudo: true


- name: start openHAB-jetty
  shell: cd {{ openhab_install_dir }}/runtime/{{openhab_version}}; nohup ./start.sh &
  ignore_errors: True
#  async: 31556926 # a year in seconds
#  when: openhab_running|failed
#  poll: 0
